<div class="container-fluid profile-banner" style="background-image: linear-gradient(-225deg, rgba(255,255,255,0.7) 0%, rgba(255,255,255,0.4) 50%), url(
  <% if current_user.dashboard_cover %>
  <%= cl_image_path current_user.dashboard_cover.path, width: 2000, height: 1000, crop: :fill %>
  <% elsif current_user.surveys.count > 0 && current_user.surveys.last.cover_picture? %>
  <%= cl_image_path current_user.surveys.last.cover_picture.path, width: 2000, height: 1000, crop: :fill %>
  <% else %>
  <%= image_path("plane.jpg") %>
  <% end %>
  );">

  <button type="button" class="survey-image-button" data-toggle="modal" data-target="#coverPictureModal">
    <i class="fa fa-camera" aria-hidden="true"></i>
  </button>

</div>


<div class="modal fade" id="coverPictureModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title" id="myModalLabel">Add picture</h4>
      </div>
      <div class="modal-body">
        <div id="new_cover_picture_form">
          <%= simple_form_for current_user, url: user_path(current_user) do |f| %>
          <%= f.input :dashboard_cover, as: :attachinary, label: "Dashboard cover picture" %>
          <%= f.button :submit, "Update", class: "btn btn-primary" %>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="row profile-content">
  <div class="profile-stats col-xs-12 col-sm-6">
    <h4>Overview</h4>
    <div class="stats-container">
      <div class="stats-fact">
        <h4><%= current_user.surveys.count %></h4>
        <p><%= "trip".pluralize(current_user.surveys.count) %></p>
      </div>
      <div class="stats-fact">
        <h4><%= current_user.answers.count %></h4>
        <p><%= "answer".pluralize(current_user.answers.count) %> given</p>
      </div>
      <div class="stats-fact large-fact">
        <% if @user.surveys && (@user.hometown == "" || @user.hometown == nil)%>
        <p>No trips or hometown not set</p>
        <% else %>
        <h4><div id="distance"></div></h4>
        <p>on your latest trip:</p>
        <p><strong><%= @user.hometown %> - <%= @survey.city.split(",").first %></strong></p>
        <% end %>
      </div>
    </div>
  </div>
  <div class="profile-map col-xs-12 col-sm-6">
    <div id="map" style="width: 100%; height: 55vh; margin-top: 2vh;"></div>
  </div>
</div>

<!-- <div id='distance'></div> -->


<% content_for(:after_js) do %>

<% unless @user.surveys.empty? %>

<script>
  var p1 = new google.maps.LatLng(<%= @user.latitude%>, <%= @user.longitude%> );
  var p2 = new google.maps.LatLng(<%= @survey.latitude %>,<%= @survey.longitude %>);
  var outputDiv = document.getElementById('distance');
  var distance = calcDistance(p1, p2)
  outputDiv.innerHTML += "<h1>" + distance + " " + "km" + "</h1>"

//calculates distance between two points in km's
function calcDistance(p1, p2) {
  return (google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(0);
}


// MAP:

  $(document).ready(function() {
    var styles = [{"featureType":"landscape.natural","elementType":"geometry.fill","stylers":[{"visibility":"on"},
    {"color":"#e0efef"}]},{"featureType":"poi","elementType":"geometry.fill","stylers":[{"visibility":"on"},{"hue":"#1900ff"},{"color":"#c0e8e8"}]},{"featureType":"road","elementType":"geometry","stylers":[{"lightness":100},{"visibility":"simplified"}]},{"featureType":"road","elementType":"labels","stylers":[{"visibility":"off"}]},{"featureType":"transit.line","elementType":"geometry","stylers":[{"visibility":"on"},{"lightness":700}]},{"featureType":"water","elementType":"all","stylers":[{"color":"#7FD8D8"}]}];
    var handler = Gmaps.build('Google');
    handler.buildMap({
      provider: {
        styles: styles },
        internal: {
          id: 'map' }
        }, function() {
          markers = handler.addMarkers(<%= raw @hash.to_json %>);
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
          if (markers.length == 0) {
            handler.getMap().setZoom(2);
          } else if (markers.length == 1) {
            handler.getMap().setZoom(2);
          }
        });



      // function calcDistance() {
      //   var start = "<%# @user.hometown %>";
      //   var end = new google.maps.LatLng(<%# @survey.latitude %>,<%# @survey.longitude %>);
      //   var service = new google.maps.DistanceMatrixService;
      //   service.getDistanceMatrix({
      //     origins: [start],
      //     destinations: [end],
      //     unitSystem: google.maps.UnitSystem.METRIC,
      //     avoidHighways: false,
      //     avoidTolls: false
      //   }, function callback(response, status) {
      //     if (status == 'OK') {
      //       var origins = response.originAddresses;
      //       var destinations = response.destinationAddresses;
      //       var outputDiv = document.getElementById('distance');
      //       outputDiv.innerHTML = '';

      //       for (var i = 0; i < origins.length; i++) {
      //         var results = response.rows[i].elements;
      //         for (var j = 0; j < results.length; j++) {
      //           var element = results[j];
      //           if ( element.status == "OK") {
      //             var distance = element.distance.text;
      //             // var duration = element.duration.text;
      //             var from = origins[i];
      //             var to = destinations[j];
      //             outputDiv.innerHTML += "<h1>" + distance + '</h1>';
      //             // console.log(distance);
      //           } else {
      //             outputDiv.innerHTML += "<h1>5,585 km</h1>";
      //           }
      //         }
      //       }
      //     }
      //   }
      //   )
      // }
      // calcDistance();
    });
  </script>
  <% end  %>

  <% end %>





